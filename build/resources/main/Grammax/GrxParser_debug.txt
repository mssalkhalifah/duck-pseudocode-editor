Grammar:
 statement -> <2> ID COLON type ASSIGN expr SEMICOL;
 type -> <3> INT
       | <4> FLOAT
       | <5> STR;
 program -> <0> PROGRAM COLON statement END
          | <1> PROGRAM COLON END;
 expr -> <6> NUM_CONST;
Sprogram' -> <7> program;

First sets:
FIRST(statement) = {ID}
FIRST(type) = {INT, STR, FLOAT}
FIRST(program) = {PROGRAM}
FIRST(expr) = {NUM_CONST}
FIRST(program') = {PROGRAM}

Follow sets:
FOLLOW(statement) = {END}
FOLLOW(type) = {ASSIGN}
FOLLOW(program) = {EOF}
FOLLOW(expr) = {SEMICOL}
FOLLOW(program') = {EOF}

Automation:
Non-terminal count: 4
Terminal count: 11
State count: 17 (0 - 16)

Action table:
STATE |   SEMICOL |       STR |     FLOAT | NUM_CONST |     COLON |       END |        ID |    ASSIGN |   PROGRAM |       INT |       EOF
   0  | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- |        s1 | --------- | ---------
   1  | --------- | --------- | --------- | --------- |        s3 | --------- | --------- | --------- | --------- | --------- | ---------
   2  | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- |    accept
   3  | --------- | --------- | --------- | --------- | --------- |        s5 |        s6 | --------- | --------- | --------- | ---------
   4  | --------- | --------- | --------- | --------- | --------- |        s7 | --------- | --------- | --------- | --------- | ---------
   5  | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- |        r1
   6  | --------- | --------- | --------- | --------- |        s8 | --------- | --------- | --------- | --------- | --------- | ---------
   7  | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- |        r0
   8  | --------- |       s10 |       s12 | --------- | --------- | --------- | --------- | --------- | --------- |        s9 | ---------
   9  | --------- | --------- | --------- | --------- | --------- | --------- | --------- |        r3 | --------- | --------- | ---------
  10  | --------- | --------- | --------- | --------- | --------- | --------- | --------- |        r5 | --------- | --------- | ---------
  11  | --------- | --------- | --------- | --------- | --------- | --------- | --------- |       s13 | --------- | --------- | ---------
  12  | --------- | --------- | --------- | --------- | --------- | --------- | --------- |        r4 | --------- | --------- | ---------
  13  | --------- | --------- | --------- |       s15 | --------- | --------- | --------- | --------- | --------- | --------- | ---------
  14  |       s16 | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | ---------
  15  |        r6 | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | ---------
  16  | --------- | --------- | --------- | --------- | --------- |        r2 | --------- | --------- | --------- | --------- | ---------


Goto table:
STATE | statement |      expr |   program |      type
   0  | --------- | --------- |         2 | ---------
   1  | --------- | --------- | --------- | ---------
   2  | --------- | --------- | --------- | ---------
   3  |         4 | --------- | --------- | ---------
   4  | --------- | --------- | --------- | ---------
   5  | --------- | --------- | --------- | ---------
   6  | --------- | --------- | --------- | ---------
   7  | --------- | --------- | --------- | ---------
   8  | --------- | --------- | --------- |        11
   9  | --------- | --------- | --------- | ---------
  10  | --------- | --------- | --------- | ---------
  11  | --------- | --------- | --------- | ---------
  12  | --------- | --------- | --------- | ---------
  13  | --------- |        14 | --------- | ---------
  14  | --------- | --------- | --------- | ---------
  15  | --------- | --------- | --------- | ---------
  16  | --------- | --------- | --------- | ---------


State 0:
    program' -> * program, {EOF}

State 1:
    program -> PROGRAM * COLON END, {EOF}
    program -> PROGRAM * COLON statement END, {EOF}

State 2:
    program' -> program *, {EOF}

State 3:
    program -> PROGRAM COLON * END, {EOF}
    program -> PROGRAM COLON * statement END, {EOF}

State 4:
    program -> PROGRAM COLON statement * END, {EOF}

State 5:
    program -> PROGRAM COLON END *, {EOF}

State 6:
    statement -> ID * COLON type ASSIGN expr SEMICOL, {END}

State 7:
    program -> PROGRAM COLON statement END *, {EOF}

State 8:
    statement -> ID COLON * type ASSIGN expr SEMICOL, {END}

State 9:
    type -> INT *, {ASSIGN}

State 10:
    type -> STR *, {ASSIGN}

State 11:
    statement -> ID COLON type * ASSIGN expr SEMICOL, {END}

State 12:
    type -> FLOAT *, {ASSIGN}

State 13:
    statement -> ID COLON type ASSIGN * expr SEMICOL, {END}

State 14:
    statement -> ID COLON type ASSIGN expr * SEMICOL, {END}

State 15:
    expr -> NUM_CONST *, {SEMICOL}

State 16:
    statement -> ID COLON type ASSIGN expr SEMICOL *, {END}
